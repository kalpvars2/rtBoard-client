[{"/home/kalp/Desktop/WebD/My/RT-Board/client/src/index.js":"1","/home/kalp/Desktop/WebD/My/RT-Board/client/src/App.js":"2","/home/kalp/Desktop/WebD/My/RT-Board/client/src/reportWebVitals.js":"3","/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/Toolbar/Toolbar.js":"4","/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/Canvas/Canvas.js":"5","/home/kalp/Desktop/WebD/My/RT-Board/client/src/helperFunctions.js":"6","/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/PencilOptions/PencilOptions.js":"7","/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/EraserOptions/EraserOptions.js":"8","/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/Join/Join.js":"9","/home/kalp/Desktop/WebD/My/RT-Board/client/src/services/config.js":"10","/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/Board/Board.js":"11"},{"size":500,"mtime":1611908416057,"results":"12","hashOfConfig":"13"},{"size":348,"mtime":1612401108128,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611908416057,"results":"15","hashOfConfig":"13"},{"size":5837,"mtime":1612319352342,"results":"16","hashOfConfig":"13"},{"size":1548,"mtime":1612315947472,"results":"17","hashOfConfig":"13"},{"size":2620,"mtime":1612315951436,"results":"18","hashOfConfig":"13"},{"size":1488,"mtime":1612316475694,"results":"19","hashOfConfig":"13"},{"size":586,"mtime":1612165956173,"results":"20","hashOfConfig":"13"},{"size":682,"mtime":1612402994966,"results":"21","hashOfConfig":"13"},{"size":105,"mtime":1612348932670,"results":"22","hashOfConfig":"13"},{"size":845,"mtime":1612403691090,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ih9ce2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kalp/Desktop/WebD/My/RT-Board/client/src/index.js",[],["49","50"],"/home/kalp/Desktop/WebD/My/RT-Board/client/src/App.js",[],"/home/kalp/Desktop/WebD/My/RT-Board/client/src/reportWebVitals.js",[],"/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/Toolbar/Toolbar.js",["51"],"import React, { useState, useEffect } from 'react';\nimport PencilOptions from '../PencilOptions/PencilOptions';\nimport EraserOptions from '../EraserOptions/EraserOptions';\nimport {ReactComponent as PencilSVG} from '../../assets/svg/pencil.svg';\nimport {ReactComponent as EraserSVG} from '../../assets/svg/eraser.svg';\nimport {ReactComponent as StickyNoteSVG} from '../../assets/svg/stickyNote.svg';\nimport {ReactComponent as DownloadSVG} from '../../assets/svg/download.svg';\nimport {ReactComponent as UploadPhotoSVG} from '../../assets/svg/uploadPhoto.svg';\nimport {ReactComponent as UndoSVG} from '../../assets/svg/undo.svg';\nimport {ReactComponent as RedoSVG} from '../../assets/svg/redo.svg';\nimport {ReactComponent as ToolExpanderSVG} from '../../assets/svg/toolExpander.svg';\nimport { Undo, Redo, Redraw, createBox } from '../../helperFunctions';\nimport './Toolbar.css';\n\nconst createSticky = () => {\n\tconst writingPad = createBox();\n\tconst textArea = document.createElement('textarea');\n\twritingPad.appendChild(textArea);\n};\n\nconst Toolbar = ({undoStack, redoStack}) => {\n\tconst [selectedTool, setSelectedTool] = useState(null);\n\tconst [showPencilOptions, setShowPencilOptions] = useState(false);\n\tconst [showEraserOptions, setShowEraserOptions] = useState(false);\n\tlet currentPencilColor = '#000000';\n\t\n\tuseEffect(() => {\n\t\tconst pencil = document.getElementById('pencil');\n\t\tconst eraser = document.getElementById('eraser');\n\t\tconst undo = document.getElementById('undo');\n\t\tconst redo = document.getElementById('redo');\n\t\tconst board = document.getElementById('board');\n\t\tconst ctx = board.getContext('2d');\n\t\t\n\t\tpencil.addEventListener('click', () => {\n\t\t\tsetSelectedTool('pencil');\n\t\t\tsetShowEraserOptions(false);\n\t\t\tsetShowPencilOptions(false);\n\t\t\tpencil.classList.add('selectedTool');\n\t\t\teraser.classList.remove('selectedTool');\n\t\t\tctx.lineWidth = document.getElementById('rangeInputPencil').value;\n\t\t\tctx.strokeStyle = currentPencilColor;\n\t\t});\n\n\t\teraser.addEventListener('click', () => {\n\t\t\tsetSelectedTool('eraser');\n\t\t\tsetShowEraserOptions(false);\n\t\t\tsetShowPencilOptions(false);\n\t\t\teraser.classList.add('selectedTool');\n\t\t\tpencil.classList.remove('selectedTool');\n\t\t\tctx.lineWidth = document.getElementById('rangeInputEraser').value;\n\t\t\tcurrentPencilColor = ctx.strokeStyle;\n\t\t\tctx.strokeStyle = \"#ffffff\";\n\t\t});\n\n\t\tundo.addEventListener('click', (event) => {\n\t\t\tUndo(undoStack, redoStack);\n\t\t\tRedraw(ctx, board, undoStack);\n\t\t});\n\n\t\tredo.addEventListener('click', (event) => {\n\t\t\tRedo(undoStack, redoStack);\n\t\t\tRedraw(ctx, board, undoStack);\n\t\t});\n\n\t\tconst pencilExpander = document.getElementById('pencilExpander');\n\t\tconst eraserExpander = document.getElementById('eraserExpander');\n\t\tpencilExpander.style.visibility = \"visible\";\n\t\tpencilExpander.addEventListener('click', () => setShowPencilOptions(true));\n\t\teraserExpander.addEventListener('click', () => setShowEraserOptions(true));\n\t\tboard.addEventListener('mousedown', () => {\n\t\t\tsetShowPencilOptions(false);\n\t\t\tsetShowEraserOptions(false);\n\t\t});\n\n\t\tconst downloadTool = document.getElementById('downloadScreenshot');\n\t\tdownloadTool.addEventListener('click', (event) => {\n\t\t\tconst a = document.createElement('a');\n\t\t\ta.download = Date.now();\n\t\t\ta.href = board.toDataURL(\"image/png\");\n\t\t\ta.click();\n\t\t\ta.remove();\n\t\t});\n\n\t\tconst uploadImageSVG = document.getElementById('uploadImageSVG');\n\t\tconst fileInput = document.getElementById('uploadedImage');\n\t\tuploadImageSVG.addEventListener('click', (event) => {\n\t\t\tevent.preventDefault();\n\t\t\tfileInput.click();\n\t\t\tfileInput.addEventListener('change', (event) => {\n\t\t\t\tconst writingPad = createBox();\n\t\t\t\tconst img = document.createElement('img');\n\t\t\t\timg.src = URL.createObjectURL(event.target.files[0]);\n\t\t\t\timg.setAttribute(\"class\", \"uploadedImage\");\n\t\t\t\twritingPad.appendChild(img);\n\t\t\t\timg.onload = function () {\n\t\t\t\t\tURL.revokeObjectURL(img.src);\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif(selectedTool){\n\t\t\tconst selectableTools = document.getElementsByClassName(\"toolExpanderSVG\");\n\t\t\tfor(let i = 0; i < selectableTools.length; ++i){\n\t\t\t\tif(selectableTools[i].id === (selectedTool + 'Expander')){\n\t\t\t\t\tselectableTools[i].style.visibility = \"visible\";\n\t\t\t\t} else {\n\t\t\t\t\tselectableTools[i].style.visibility = \"hidden\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [selectedTool]);\n\n\tuseEffect(() => {\n\t\tconst pencilOptions = document.getElementsByClassName('pencilOptions')[0];\n\t\tconst eraserOptions = document.getElementsByClassName('eraserOptions')[0];\n\t\t\n\t\tif(showPencilOptions)\n\t\t\tpencilOptions.style.visibility = \"visible\";\n\t\telse\n\t\t\tpencilOptions.style.visibility = \"hidden\";\n\t\t\n\t\tif(showEraserOptions)\n\t\t\teraserOptions.style.visibility = \"visible\";\n\t\telse\n\t\t\teraserOptions.style.visibility = \"hidden\";\n\t}, [showPencilOptions, showEraserOptions]);\t\n\n\treturn (\n\t\t<div className={\"toolbar\"}>\n\t\t\t<div className={\"tool expanderDiv\"}>\n\t\t\t\t<PencilSVG title=\"Pencil\" id = {\"pencil\"} className={\"selectedTool\"}/>\n\t\t\t\t<ToolExpanderSVG id = {\"pencilExpander\"} className={\"toolExpanderSVG\"} />\n\t\t\t\t<PencilOptions className={\"pencilOptions\"}/>\n\t\t\t</div>\n\t\t\t<div className={\"tool expanderDiv\"}>\n\t\t\t\t<EraserSVG title=\"Eraser\" id = {\"eraser\"} />\n\t\t\t\t<ToolExpanderSVG id = {\"eraserExpander\"} className={\"toolExpanderSVG\"} />\n\t\t\t\t<EraserOptions className={\"eraserOptions\"}/>\n\t\t\t</div>\n\t\t\t<StickyNoteSVG onClick={createSticky} title=\"Sticky Note\" style= {{width: \"auto\"}} className={\"tool\"} />\n\t\t\t<div className={\"tool\"}>\n\t\t\t\t<UploadPhotoSVG id={\"uploadImageSVG\"} title=\"Upload Image\" />\n\t\t\t\t<input id={\"uploadedImage\"} type=\"file\" accept=\"image/*\"/>\n\t\t\t</div>\n\t\t\t<DownloadSVG title=\"Download Screenshot\" id={\"downloadScreenshot\"} style = {{width: \"auto\"}} className={\"tool\"} />\n\t\t\t<UndoSVG title=\"Undo\" id={\"undo\"} className={\"tool\"} />\n\t\t\t<RedoSVG title=\"Redo\" id={\"redo\"} className={\"tool\"} />\n\t\t</div>\n\t);\n};\n\nexport default Toolbar;","/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/Canvas/Canvas.js",["52"],"import React, { useEffect } from 'react';\n\nconst Canvas = ({undoStack, redoStack}) => {\n\tuseEffect(() => {\n\t\tconst board = document.getElementsByTagName('canvas')[0];\n\t\tboard.height = window.innerHeight;\n\t\tboard.width = window.innerWidth;\n\t\tconst ctx = board.getContext('2d');\n\t\tctx.lineWidth = 3;\n\t\tctx.lineJoin = \"round\";\n\t\tctx.lineCap = \"round\";\n\t\tctx.imageSmoothingEnabled = true;\n\t\tctx.imageSmoothingQuality = \"high\";\n\t\tctx.miterlimit = 1;\n\t\tctx.fillStyle = \"#ffffff\";\n\t\tctx.fillRect(0, 0, board.width, board.height);\n\n\t\tlet isMouseDown = false;\n\n\t\tboard.addEventListener('mousedown', (event) => {\n\t\t\tredoStack.length = 0;\n\t\t\tctx.beginPath();\n\t\t\tconst {top} = board.getBoundingClientRect();\n\t\t\tctx.moveTo(event.clientX, event.clientY - top);\n\t\t\tisMouseDown = true;\n\t\t\tlet point = {\n\t\t\t\tx: event.clientX,\n\t\t\t\ty: event.clientY - top,\n\t\t\t\tidentifier: \"mousedown\",\n\t\t\t\tcolor: ctx.strokeStyle,\n\t\t\t\twidth: ctx.lineWidth\n\t\t\t};\n\t\t\tundoStack.push(point);\n\t\t});\n\n\t\tboard.addEventListener(\"mousemove\", (event) => {\n\t\t\tif(isMouseDown){\n\t\t\t\tlet {top} = board.getBoundingClientRect();\n\t\t\t\tctx.lineTo(event.clientX, event.clientY - top);\n\t\t\t\tctx.stroke();\n\t\t\t\tlet point = {\n\t\t\t\t\tx: event.clientX,\n\t\t\t\t\ty: event.clientY - top,\n\t\t\t\t\tidentifier: \"mousemove\",\n\t\t\t\t\tcolor: ctx.strokeStyle,\n\t\t\t\t\twidth: ctx.lineWidth\n\t\t\t\t};\n\t\t\t\tundoStack.push(point);\n\t\t\t}\n\t\t});\n\n\t\tboard.addEventListener(\"mouseup\", (event) => {\n\t\t\tisMouseDown = false;\n\t\t});\n\t}, []);\n\treturn (\n\t\t<div>\n\t\t\t<canvas id = {\"board\"} className={\"board\"}></canvas>\n\t\t</div>\n\t);\n};\n\nexport default Canvas;","/home/kalp/Desktop/WebD/My/RT-Board/client/src/helperFunctions.js",[],"/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/PencilOptions/PencilOptions.js",[],"/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/EraserOptions/EraserOptions.js",[],"/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/Join/Join.js",["53"],"/home/kalp/Desktop/WebD/My/RT-Board/client/src/services/config.js",[],"/home/kalp/Desktop/WebD/My/RT-Board/client/src/components/Board/Board.js",["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":52,"column":25,"nodeType":"62","endLine":52,"endColumn":40},{"ruleId":"60","severity":1,"message":"63","line":55,"column":5,"nodeType":"64","endLine":55,"endColumn":7,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"70","line":11,"column":9,"nodeType":"68","messageId":"69","endLine":11,"endColumn":13},{"ruleId":"60","severity":1,"message":"71","line":23,"column":5,"nodeType":"64","endLine":23,"endColumn":30,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","Assignments to the 'currentPencilColor' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has missing dependencies: 'redoStack' and 'undoStack'. Either include them or remove the dependency array.","ArrayExpression",["75"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'room' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'apiURL'. Either exclude it or remove the dependency array. Outer scope values like 'apiURL' aren't valid dependencies because mutating them doesn't re-render the component.",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [redoStack, undoStack]",{"range":"81","text":"82"},"Update the dependencies array to be: [location.search]",{"range":"83","text":"84"},[1430,1432],"[redoStack, undoStack]",[616,641],"[location.search]"]